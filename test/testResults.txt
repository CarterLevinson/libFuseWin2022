============================= test session starts ==============================
platform linux -- Python 3.9.7, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3
cachedir: .pytest_cache
rootdir: /home/qizhe/Desktop/lib-branch/libFuseWin2022
collecting ... Making install in src
make[1]: Entering directory '/home/qizhe/Desktop/lib-branch/libFuseWin2022/src'
make[2]: Entering directory '/home/qizhe/Desktop/lib-branch/libFuseWin2022/src'
 /usr/bin/mkdir -p '/usr/local/bin'
  /usr/bin/install -c ntapfuse '/usr/local/bin'
make[2]: Nothing to be done for 'install-data-am'.
make[2]: Leaving directory '/home/qizhe/Desktop/lib-branch/libFuseWin2022/src'
make[1]: Leaving directory '/home/qizhe/Desktop/lib-branch/libFuseWin2022/src'
make[1]: Entering directory '/home/qizhe/Desktop/lib-branch/libFuseWin2022'
make[2]: Entering directory '/home/qizhe/Desktop/lib-branch/libFuseWin2022'
make[2]: Nothing to be done for 'install-exec-am'.
 /usr/bin/mkdir -p '/usr/local/share/doc/ntapfuse'
 /usr/bin/install -c -m 644 README.md '/usr/local/share/doc/ntapfuse'
make[2]: Leaving directory '/home/qizhe/Desktop/lib-branch/libFuseWin2022'
make[1]: Leaving directory '/home/qizhe/Desktop/lib-branch/libFuseWin2022'
Adding user `user666' to group `sudo' ...
Adding user user666 to group sudo
Done.
Adding user `user666' to group `qizhe' ...
Adding user user666 to group qizhe
Done.
Adding user `user888' to group `sudo' ...
Adding user user888 to group sudo
Done.
Adding user `user888' to group `qizhe' ...
Adding user user888 to group qizhe
Done.
Adding user `user999' to group `sudo' ...
Adding user user999 to group sudo
Done.
Adding user `user999' to group `qizhe' ...
Adding user user999 to group qizhe
Done.
creating some test users...
collected 7 items

test/ntapfuse_test.py::TestClass::test_mkdir 
creating basedir and mountpoint...
Testing mkdir...
creating some empty folders for current user...
switching to another user and create some empty folders
User1 expecting numbers of logs: 22  result is: 22
User1 expecting user usage: 90112  result is: 90112
User2 expecting numbers of logs: 20  result is: 20
User2 expecting user usage: 81920  result is: 81920
removing all test files and folders...
PASSED
test/ntapfuse_test.py::TestClass::test_rmdir 
creating basedir and mountpoint...
Testing rmdir...
creating some folders and then delete some of them...
switch to another user to do the same stuff...
User1 expecting numbers of logs: 18  result is: 18
User1 expecting user usage: 73728  result is: 73728
User2 expecting numbers of logs: 20  result is: 20
User2 expecting user usage: 81920  result is: 81920
removing all test files and folders...
PASSED
test/ntapfuse_test.py::TestClass::test_write 
creating basedir and mountpoint...
Writing some files as original user
Gathering usage and log results
removing all test files and folders...
User1 expecting numbers of logs: 3  result is: 3
User1 expecting user usage: 12288  result is: 12288
PASSED
test/ntapfuse_test.py::TestClass::test_unlink 
creating basedir and mountpoint...
Creating some empty files
Removing some empty files
Gathering usage data
removing all test files and folders...
User1 expecting numbers of logs: 8  result is: 0
User1 expecting user usage: 0  result is: 0
FAILED
test/ntapfuse_test.py::TestClass::test_link 
creating basedir and mountpoint...
User1 expecting user usage: 73728  result is: 36001
User2 expecting user usage: 73728  result is: 36001
removing all test files and folders...
FAILED
test/ntapfuse_test.py::TestClass::test_chown qizhe
creating test folder and file...
before chown
total 8
-rw-rw-r-- 1 qizhe qizhe   10 Apr 11 23:28 testFile.txt
drwxrwxr-x 2 qizhe qizhe 4096 Apr 11 23:28 testFolder
total 8
-rw-rw-r-- 1 user888 qizhe   10 Apr 11 23:28 testFile.txt
drwxrwxr-x 2 user888 qizhe 4096 Apr 11 23:28 testFolder

creating basedir and mountpoint...
switching to root user to execute chown....
after chown: 
User1 expecting user usage: 0  result is: 8192
User2 expecting user usage: 8192  result is: 0
removing all test files and folders...
FAILED
test/ntapfuse_test.py::TestClass::test_truncate 
creating basedir and mountpoint...
writing size is: 36000
mounting and creating test files to truncate...
switching to another user to create file and truncate....
User1 expecting user usage: 4096  result is: 36001
User2 expecting user usage: 12288  result is: 36001
removing all test files and folders...
deleting all test users...
FAILED

=================================== FAILURES ===================================
____________________________ TestClass.test_unlink _____________________________

self = <ntapfuse_test.TestClass object at 0x7fd2004c5be0>

    def test_unlink(self):
        init_test()
    
        testuser1 = oriUser
        uid1 = get_uid_from_username(testuser1)
        numLogs1 = check_log_db(uid1, "Unlink")
        usage1 = check_quota_db(uid1)
        cmd = '''
        touch %s
        '''
    
        print("Creating some empty files")
        for i in range(0, 8):
            usage1 += blockSize
            os.system(cmd % ("mountPoint/file" + str(i)))
    
        print("Removing some empty files")
        file = "mountPoint/file%s"
        for i in range(0, 8):
            subprocess.run(['rm', file % str(i)])
            numLogs1 += 1
            usage1 -= blockSize
    
        print("Gathering usage data")
        usageRes1 = check_quota_db(uid1)
        numLogsRes1 = check_log_db(uid1, "Unlink")
    
        doneTest()
        print("User1 expecting numbers of logs: %s  result is: %s" %
              (str(numLogs1), str(numLogsRes1)))
        print("User1 expecting user usage: %s  result is: %s" %
              (str(usage1), str(usageRes1)))
    
>       assert usage1 == usageRes1 and numLogs1 == numLogsRes1
E       assert (0 == 0
E         +0
E         -0 and 8 == 0
E         +8
E         -0)

test/ntapfuse_test.py:315: AssertionError
_____________________________ TestClass.test_link ______________________________

self = <ntapfuse_test.TestClass object at 0x7fd2002f7cd0>

    def test_link(self):
        init_test()
    
        testuser1 = oriUser
        testuser2 = userList[2]
        uid1 = get_uid_from_username(testuser1)
        uid2 = get_uid_from_username(testuser2)
        usage1 = check_quota_db(uid1)
        usage2 = check_quota_db(uid2)
    
        testFile1 = "test1.txt"
        testFile2 = "test2.txt"
        linkFile1 = "test1link.txt"
        linkFile2 = "test2link.txt"
    
        testtext = "test truncate ...." * 2000
    
        cmd = '''
        sudo umount %s
        sudo runuser %s << EOF
        ntapfuse mount %s %s
        cd %s
        echo %s > %s
        ln %s %s
        cd %s
        ''' % (mountName, testuser1, baseDir, mountName, mountDir, testtext,
               testFile1, testFile1, linkFile1, workDir)
    
        os.system(cmd)
        fsize = math.ceil(len(testtext) / 4096) * 4096
        usage1 += fsize * 2 if len(testtext) > blockSize else blockSize * 2
    
        cmd = '''
        sudo umount %s
        sudo runuser %s << EOF
        ntapfuse mount %s %s
        cd %s
        echo %s > %s
        ln %s %s
        cd %s
        ''' % (mountName, testuser2, baseDir, mountName, mountDir, testtext,
               testFile2, testFile2, linkFile2, workDir)
    
        os.system(cmd)
    
        usage2 += fsize * 2 if len(testtext) > blockSize else blockSize * 2
    
        logUsage1 = check_quota_db(uid1)
        logUsage2 = check_quota_db(uid2)
    
        print("User1 expecting user usage: %s  result is: %s" %
              (str(usage1), str(logUsage1)))
        print("User2 expecting user usage: %s  result is: %s" %
              (str(usage2), str(logUsage2)))
    
        doneTest()
    
>       assert usage1 == logUsage1 and usage2 == logUsage2
E       assert (73728 == 36001
E         +73728
E         -36001)

test/ntapfuse_test.py:374: AssertionError
_____________________________ TestClass.test_chown _____________________________

self = <ntapfuse_test.TestClass object at 0x7fd2004c53a0>

    def test_chown(self):
        # only test changing the ownership of top level directory and file
        init_test()
    
        testuser1 = oriUser
        testuser2 = userList[1]
    
        uid1 = get_uid_from_username(testuser1)
        uid2 = get_uid_from_username(testuser2)
    
        cmd = '''
        whoami
        cd %s
        echo creating test folder and file...
        mkdir testFolder
        echo "test text" > testFile.txt
        echo before chown
        ls -l
        ''' % (mountName)
    
        os.system(cmd)
    
        usage1 = check_quota_db(uid1)
        usage2 = check_quota_db(uid2)
    
        filePath = mountDir + "/testFile.txt"
        folderPath = mountDir + "/testFolder"
    
        fileSize = os.path.getsize(filePath)
        folderSize = os.path.getsize(folderPath)
    
        fileSize = 4096 if fileSize < 4096 else fileSize
        folderSize = 4096 if folderSize < 4096 else folderSize
    
        print("switching to root user to execute chown....")
        print("after chown: ")
    
        cmd = '''
        sudo umount %s
        sudo runuser root << EOF
        ntapfuse mount %s %s
        cd %s
        chown %s %s
        chown %s %s
        ls -l
        ''' % (mountName, baseDir, mountName, mountDir, testuser2,
               "testFile.txt", testuser2, "testFolder")
    
        os.system(cmd)
    
        usage1 -= (fileSize + folderSize)
        usage2 += (fileSize + folderSize)
    
        logUsage1 = check_quota_db(uid1)
        logUsage2 = check_quota_db(uid2)
    
        print("User1 expecting user usage: %s  result is: %s" %
              (str(usage1), str(logUsage1)))
        print("User2 expecting user usage: %s  result is: %s" %
              (str(usage2), str(logUsage2)))
    
        doneTest()
>       assert usage1 == logUsage1 and usage2 == logUsage2
E       assert (0 == 8192
E         +0
E         -8192)

test/ntapfuse_test.py:438: AssertionError
___________________________ TestClass.test_truncate ____________________________

self = <ntapfuse_test.TestClass object at 0x7fd2002c7c70>

    def test_truncate(self):
        # truncate with a size that is smaller than original size
        # truncate with a size that is larger than original size
        # truncate with a size that is smaller than block size
    
        init_test()
    
        testtext = "test truncate ...." * 2000
        print("writing size is: " + str(len(testtext)))
        testuser1 = userList[1]
        testuser2 = userList[2]
    
        uid1 = get_uid_from_username(testuser1)
        uid2 = get_uid_from_username(testuser2)
    
        usage1 = check_quota_db(uid1)
        usage2 = check_quota_db(uid2)
    
        testfile1 = "test1.txt"
        testfile2 = "test2.txt"
        truncateSize1 = 3000
        truncateSize2 = 10000
        extremeSize = 100000000  # when truncate with this size, no usage change
        os.chdir("%s" % workDir)
        print("mounting and creating test files to truncate...")
    
        cmd = '''
        sudo umount %s
        sudo runuser %s << EOF
        ntapfuse mount %s %s
        cd %s
        echo %s > %s
        truncate -s %s %s
        truncate -s %s %s
        cd %s
        ''' % (mountName, testuser1, baseDir, mountName, mountDir, testtext,
               testfile1, truncateSize1, testfile1, extremeSize, testfile1,
               workDir)
        os.system(cmd)
    
        orifilesize = len(testtext)
        if len(testtext)%blockSize==0:
            orifilesize = len(testtext)
        else:
            orifilesize = math.ceil(len(testtext)/blockSize)*blockSize
    
        print("switching to another user to create file and truncate....")
    
        cmd = '''
        sudo umount %s
        sudo runuser %s << EOF
        ntapfuse mount %s %s
        cd %s
        echo %s > %s
        truncate -s %s %s
        truncate -s %s %s
        cd %s
        sudo umount %s
        sudo runuser %s << EOF
        ''' % (mountName, testuser2, baseDir, mountName, mountDir, testtext,
               testfile2, truncateSize2, testfile2, extremeSize, testfile2,
               workDir, mountName, oriUser)
    
        os.system(cmd)
    
        change1 = 0
    
        if truncateSize1 > orifilesize:
            change1 = 0
        else:
            if truncateSize1 > blockSize:
                change1 = truncateSize1 - orifilesize
            else:
                change1 = blockSize - orifilesize
    
        change2 = 0
    
        if truncateSize2 > orifilesize:
            change2 = 0
        else:
            if truncateSize2 > blockSize:
                change2 = truncateSize2 - orifilesize
            else:
                change2 = blockSize - orifilesize
    
        usage1 = usage1+orifilesize+change1
        usage1 = math.ceil(usage1/blockSize)*blockSize
        usage2 = usage2+orifilesize+change2
        usage2 = math.ceil(usage2/blockSize)*blockSize
        logUsage1 = check_quota_db(uid1)
        logUsage2 = check_quota_db(uid2)
    
        print("User1 expecting user usage: %s  result is: %s"%(str(usage1),str(logUsage1)))
        print("User2 expecting user usage: %s  result is: %s"%(str(usage2),str(logUsage2)))
    
        doneTest()
    
        # for some reason, can't put this outside the testclass, will cause error
        destroy_test_env()
    
>       assert usage1 == logUsage1 and usage2 == logUsage2
E       assert (4096 == 36001
E         +4096
E         -36001)

test/ntapfuse_test.py:540: AssertionError
=========================== short test summary info ============================
FAILED test/ntapfuse_test.py::TestClass::test_unlink - assert (0 == 0
FAILED test/ntapfuse_test.py::TestClass::test_link - assert (73728 == 36001
FAILED test/ntapfuse_test.py::TestClass::test_chown - assert (0 == 8192
FAILED test/ntapfuse_test.py::TestClass::test_truncate - assert (4096 == 36001
========================= 4 failed, 3 passed in 11.29s =========================
